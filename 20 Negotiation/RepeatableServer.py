# import the socket library - will be referenced by "socket" within the program
import socket
import random
from datetime import datetime
from num2words import num2words
from diffiehellman import diffie_hellman
from vigneresquare import vignere_cipher

HOST = "127.0.0.1"
PORT = 50001

# Seed the random number generator with the current time - note use of timestamp() as use of time is depricated
random.seed(datetime.now().timestamp())

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind((HOST, PORT))

    s.listen()
    conn, addr = s.accept()

    with conn:
        # Diffie Hellman key exchange - Server side is generating base and modulus, autogenerated private key
        p = random.randint(500, 5000)
        q = random.randint(200, 500)
        dhgenerator = diffie_hellman(p, q)
        dhgenerator.calculate_partial_key()

        conn.send(f"{p}:{q}:{dhgenerator.partial_key}".encode("utf-8"))
        data = conn.recv(1024)
        message = data.decode("utf-8")
        dhgenerator.calculate_full_key(int(message))

        # Convert the DH key to a word version to feed the vignere cipher
        key = num2words(dhgenerator.symmetric_key)

        # Setup the vignere cipher
        vigcipher = vignere_cipher()
        vigcipher.set_key(key)

        print(f"Connected by {addr}")

        while True:
            data = conn.recv(1024)
            if not data:
                break

            # Decode the message to show that it has been successfully decoded
            message = data.decode("utf-8")
            message = vigcipher.decrypt(message)
            print(message)

            # Reencode the message to show that the decryption works on the client side.
            message = vigcipher.encrypt(message)
            print(f"Encoded as: {message}")
            data = message.encode("utf-8")
            conn.sendall(data)